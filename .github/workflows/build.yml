name: Build macOS Universal2 App

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-ython@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow pyobjc

      - name: Build app with PyInstaller
        run: |
          pyinstaller --windowed \
            --name DuckApp \
            --add-data "duck.webp:Resources" \
            --add-data "duck1.webp:Resources" \
            duck_spawner.py

          plist_path="dist/DuckApp.app/Contents/Info.plist"
          /usr/libexec/PlistBuddy -c "Set :LSMinimumSystemVersion 10.13" "$plist_path" || \
            /usr/libexec/PlistBuddy -c "Add :LSMinimumSystemVersion string 10.13" "$plist_path"
          /usr/libexec/PlistBuddy -c "Set :CFBundleSupportedPlatforms:0 MacOSX" "$plist_path" || \
            /usr/libexec/PlistBuddy -c "Add :CFBundleSupportedPlatforms array" "$plist_path"

          if [ "${{ matrix.os }}" = "macos-13" ]; then
            outdir="dist/intel"
          else
            outdir="dist/arm"
          fi
          mkdir -p "$outdir"
          cp -R dist/DuckApp.app "$outdir/"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os == 'macos-13' && 'app-intel' || 'app-arm' }}
          path: ${{ matrix.os == 'macos-13' && 'dist/intel/DuckApp.app' || 'dist/arm/DuckApp.app' }}

  merge:
    runs-on: macos-14
    needs: build

    steps:
      - name: Download Intel artifact
        uses: actions/download-artifact@v4
        with:
          name: app-intel
          path: dist/intel

      - name: Download Arm artifact
        uses: actions/download-artifact@v4
        with:
          name: app-arm
          path: dist/arm

      - name: Fix artifact structure
        run: |
          for arch in intel arm; do
            if [ -d "dist/$arch/Contents" ]; then
              mkdir -p dist/$arch-fixed/DuckApp.app
              mv dist/$arch/* dist/$arch-fixed/DuckApp.app/
              rm -rf dist/$arch
              mv dist/$arch-fixed dist/$arch
            fi
          done

      - name: Merge into universal2
        run: |
          mkdir -p dist/universal/DuckApp.app/Contents/MacOS
          cp -R dist/intel/DuckApp.app/* dist/universal/DuckApp.app/
          lipo -create \
            dist/intel/DuckApp.app/Contents/MacOS/DuckApp \
            dist/arm/DuckApp.app/Contents/MacOS/DuckApp \
            -output dist/universal/DuckApp.app/Contents/MacOS/DuckApp
          chmod +x dist/universal/DuckApp.app/Contents/MacOS/DuckApp

      - name: Create ad-hoc signature
        run: |
          # Use ad-hoc signing (no certificate needed)
          codesign --deep --force --verbose -s - dist/universal/DuckApp.app
          # Remove any extended attributes that might cause issues
          xattr -cr dist/universal/DuckApp.app

      - name: Create DMG
        run: |
          hdiutil create -volname "DuckApp" \
            -srcfolder dist/universal/DuckApp.app \
            -ov -format UDZO \
            dist/DuckApp-universal.dmg

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: dist/DuckApp-universal.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}