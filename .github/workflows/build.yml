name: Build macOS Universal2 App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          set -x
          python -m pip install --upgrade pip
          pip install pyinstaller pillow pyobjc

      - name: Build app with PyInstaller
        run: |
          set -x
          pyinstaller --windowed \
            --name DuckApp \
            --add-data "duck.webp:Resources" \
            --add-data "duck1.webp:Resources" \
            duck_spawner.py

          # fix Info.plist
          plist_path="dist/DuckApp.app/Contents/Info.plist"
          /usr/libexec/PlistBuddy -c "Set :LSMinimumSystemVersion 13.0" "$plist_path" || \
            /usr/libexec/PlistBuddy -c "Add :LSMinimumSystemVersion string 13.0" "$plist_path"
          /usr/libexec/PlistBuddy -c "Set :CFBundleSupportedPlatforms:0 MacOSX" "$plist_path" || \
            /usr/libexec/PlistBuddy -c "Add :CFBundleSupportedPlatforms array" "$plist_path"

          # choose output folder
          if [ "${{ matrix.os }}" = "macos-13" ]; then
            outdir="dist/intel"
          else
            outdir="dist/arm"
          fi

          mkdir -p "$outdir"
          cp -R dist/DuckApp.app "$outdir/"

          echo "Contents of $outdir:"
          ls -lR "$outdir"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os == 'macos-13' && 'app-intel' || 'app-arm' }}
          path: ${{ matrix.os == 'macos-13' && 'dist/intel/DuckApp.app' || 'dist/arm/DuckApp.app' }}

  merge:
    runs-on: macos-14
    needs: build

    steps:
      - name: Debug before downloads
        run: |
          set -x
          echo "pwd: $(pwd)"
          ls -lR

      - name: Download Intel artifact
        uses: actions/download-artifact@v4
        with:
          name: app-intel
          path: dist/intel

      - name: Check Intel artifact
        run: |
          set -x
          echo "Intel artifact folder:"
          ls -lR dist/intel
          if [ ! -d "dist/intel/DuckApp" ]; then
            echo "ERROR: Intel artifact missing!"
            exit 1
          fi

      - name: Download Arm artifact
        uses: actions/download-artifact@v4
        with:
          name: app-arm
          path: dist/arm

      - name: Check Arm artifact
        run: |
          set -x
          echo "Arm artifact folder:"
          ls -lR dist/arm
          if [ ! -d "dist/arm/DuckApp.app" ]; then
            echo "ERROR: Arm artifact missing!"
            exit 1
          fi

      - name: Merge into universal2
        run: |
          set -x
          mkdir -p dist/universal/DuckApp.app/Contents/MacOS
          echo "Copying Intel .app contents..."
          cp -R dist/intel/DuckApp.app/* dist/universal/DuckApp.app/
          echo "Listing dist/universal after copy:"
          ls -lR dist/universal
          echo "Running lipo..."
          lipo -create \
            dist/intel/DuckApp.app/Contents/MacOS/DuckApp \
            dist/arm/DuckApp.app/Contents/MacOS/DuckApp \
            -output dist/universal/DuckApp.app/Contents/MacOS/DuckApp
          echo "Lipo done, final MacOS folder:"
          ls -lR dist/universal/DuckApp.app/Contents/MacOS

      - name: Create DMG
        run: |
          set -x
          hdiutil create -volname "DuckApp" \
            -srcfolder dist/universal/DuckApp.app \
            -ov -format UDZO dist/DuckApp-universal.dmg
          echo "DMG contents:"
          ls -l dist/

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: dist/DuckApp-universal.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
